{
  "openapi": "3.0.1",
  "info": {
    "title": "TnP-Portal backend",
    "description": "This is backend api for TnP Portal to manage users, students, job-postings, applications and document for TnP Portal system.",
    "version": "0.1.0"
  },
  "servers": [
    {
      "url": "http://localhost:9000/",
      "description": "server for dev testing purpose"
    }
  ],
  "paths": {
    "/v1/register": {
      "post": {
        "tags": [
          "Users"
        ],
        "summary": "Create and register a user with users details into the system",
        "description": "This endpoint will create a new user into the system and assign role based on user information provided.",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/usersReq"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "User created successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "token": {
                      "type": "string",
                      "example": "adze*$ajhfah^&83u2980yasd089fy"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Invalid organization ID provided",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/400Error"
                }
              }
            }
          },
          "409": {
            "description": "User with same enrollment number already exists",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/409Error"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/500Error"
                }
              }
            }
          }
        }
      }
    },
    "/v1/login": {
      "post": {
        "tags": [
          "Users"
        ],
        "description": "Login a user based on provided information",
        "summary": "Let a user logs into the system",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/userLoginReq"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Success status of login",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "token": {
                      "type": "string",
                      "example": "A1049734uakjsdbnka$%nh3928y49-rwyg%kafiohp"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Invalid enrollment number provided",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/400Error"
                }
              }
            }
          },
          "404": {
            "description": "User with enrollment number not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/404Error"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/500Error"
                }
              }
            }
          }
        }
      }
    },
    "/v1/user/{userId}": {
      "patch": {
        "tags": [
          "User"
        ],
        "description": "Updates specific item for user resource update-able are : name, password, email, role",
        "summary": "Update user info based on unique userId",
        "parameters": [
          {
            "name": "userId",
            "schema": {
              "type": "string",
              "example": 191325
            },
            "description": "unique orgId of user",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Success update of an element of user resource",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/userResp"
                }
              }
            }
          },
          "400": {
            "description": "Invalid enrollment number provided",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/400Error"
                }
              }
            }
          },
          "404": {
            "description": "User with enrollment number not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/404Error"
                }
              }
            }
          },
          "500": {
            "description": "Server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/500Error"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "User"
        ],
        "description": "Update user info - name, email, enrollmentId, password",
        "summary": "Updates user info for specific userId",
        "parameters": [
          {
            "name": "userId",
            "schema": {
              "type": "string",
              "example": 191325
            },
            "description": "Unique orgId of user",
            "in": "path",
            "required": true
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "$ref": "#/components/schemas/usersReq"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successfully updated user info",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/userResp"
                }
              }
            }
          },
          "400": {
            "description": "Invalid enrollment number provided",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/400Error"
                }
              }
            }
          },
          "404": {
            "description": "User with enrollment number not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/404Error"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/500Error"
                }
              }
            }
          }
        }
      },
      "get": {
        "tags": [
          "User"
        ],
        "description": "Fetch the details of a specific user with UserID provided",
        "summary": "Fetch user details",
        "parameters": [
          {
            "name": "userId",
            "schema": {
              "type": "string",
              "example": "191325"
            },
            "description": "Unique user id i.e unique organization id",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Success get of user information",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/userResp"
                }
              }
            }
          },
          "400": {
            "description": "Invalid enrollment number provided",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/400Error"
                }
              }
            }
          },
          "404": {
            "description": "User with enrollment number not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/404Error"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/500Error"
                }
              }
            }
          }
        }
      }
    },
    "/v1/student": {
      "post": {
        "tags": [
          "Student"
        ],
        "summary": "Create a new student",
        "description": "Create a new student resource where it can be student and student information",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/studentReq"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Successfully created a new student",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/studentResp"
                }
              }
            }
          },
          "400": {
            "description": "Invalid organization ID provided",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/400Error"
                }
              }
            }
          },
          "409": {
            "description": "User with same enrollment number already exists",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/409Error"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/500Error"
                }
              }
            }
          }
        }
      }
    },
    "/v1/student/{studentId}": {
      "get": {
        "tags": [
          "Student"
        ],
        "summary": "Fetch the student information based on ID",
        "description": "Fetch the student information",
        "parameters": [
          {
            "name": "studentId",
            "in": "path",
            "schema": {
              "type": "string",
              "example": "01939237-2a5b-48d6-9df3-d38cc205a898"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully fetch the student",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/studentResp"
                }
              }
            }
          },
          "400": {
            "description": "Invalid enrollment number provided",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/400Error"
                }
              }
            }
          },
          "404": {
            "description": "User with enrollment number not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/404Error"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/500Error"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Student"
        ],
        "summary": "Deletes the student by studentId",
        "description": "Delete the student based on given studentId",
        "parameters": [
          {
            "name": "studentId",
            "in": "path",
            "schema": {
              "type": "string",
              "example": "01939237-2a5b-48d6-9df3-d38cc205a898"
            },
            "required": true
          }
        ],
        "responses": {
          "204": {
            "description": "Successfully deletes the user"
          },
          "400": {
            "description": "Invalid enrollment number provided",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/400Error"
                }
              }
            }
          },
          "404": {
            "description": "User with enrollment number not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/404Error"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/500Error"
                }
              }
            }
          }
        }
      }
    },
    "/v1/document": {
      "post": {
        "tags": [
          "Documents"
        ],
        "description": "Create a new document",
        "summary": "Creates a new document in the database",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/documentReq"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Success storing the document in database",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/documentResp"
                }
              }
            }
          }
        }
      }
    },
    "/v1/document/{docId}": {
      "get": {
        "tags": [
          "Documents"
        ],
        "description": "Fetch the document based on document id",
        "summary": "Fetch the document",
        "parameters": [
          {
            "name": "docId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "example": "6913238f-d5e2-4ee6-b9f7-3e416f529fdb"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully fetch the document",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/documentResp"
                }
              }
            }
          },
          "400": {
            "description": "Invalid document ID provided",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/400Error"
                }
              }
            }
          },
          "404": {
            "description": "Document does not exists",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/404Error"
                }
              }
            }
          },
          "500": {
            "description": "Server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/500Error"
                }
              }
            }
          }
        }
      }
    },
    "/v1/documents": {
      "get": {
        "tags": ["Documents"],
        "summary": "List documents with pagination",
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "schema": {
              "type": "integer",
              "default": 1
            }
          },
          {
            "name": "limit",
            "in": "query",
            "schema": {
              "type": "integer",
              "default": 10
            }
          },
          {
            "name": "userId",
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "List of documents",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "documents": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/documentResp"
                      }
                    },
                    "total": {
                      "type": "integer"
                    },
                    "page": {
                      "type": "integer"
                    },
                    "limit": {
                      "type": "integer"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/v1/jobs": {
      "get": {
        "tags": ["Jobs"],
        "summary": "Get job listings",
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "schema": {
              "type": "integer",
              "default": 1
            }
          },
          {
            "name": "limit",
            "in": "query",
            "schema": {
              "type": "integer",
              "default": 10
            }
          },
          {
            "name": "company",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "role",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "location",
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "List of jobs",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "jobs": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/jobResp"
                      }
                    },
                    "total": {
                      "type": "integer"
                    },
                    "page": {
                      "type": "integer"
                    },
                    "limit": {
                      "type": "integer"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/v1/jobs/{jobId}": {
      "get": {
        "tags": ["Jobs"],
        "summary": "Get job details",
        "parameters": [
          {
            "name": "jobId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Job details",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/jobResp"
                }
              }
            }
          }
        }
      }
    },
    "/v1/jobs/{jobId}/apply": {
      "post": {
        "tags": ["Jobs"],
        "summary": "Apply for a job",
        "parameters": [
          {
            "name": "jobId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/jobApplicationReq"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Application submitted successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/jobApplicationResp"
                }
              }
            }
          }
        }
      }
    },
    "/v1/companies/profile": {
      "put": {
        "tags": ["Companies"],
        "summary": "Create or update company profile",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/companyProfileReq"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Company profile updated successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/companyProfileResp"
                }
              }
            }
          }
        }
      }
    },
    "/v1/companies/jobs": {
      "post": {
        "tags": ["Companies"],
        "summary": "Post a new job opening",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/jobPostingReq"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Job posted successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/jobPostingResp"
                }
              }
            }
          }
        }
      }
    },
    "/v1/students/applications": {
      "get": {
        "tags": ["Applications"],
        "summary": "Get student's applications",
        "responses": {
          "200": {
            "description": "List of applications",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "applications": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/applicationResp"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/v1/companies/applications": {
      "get": {
        "tags": ["Applications"],
        "summary": "Get company's applications",
        "responses": {
          "200": {
            "description": "List of applications",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "applications": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/applicationResp"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/v1/applications/{applicationId}": {
      "patch": {
        "tags": ["Applications"],
        "summary": "Update application status",
        "parameters": [
          {
            "name": "applicationId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/applicationStatusUpdateReq"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Application status updated successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/applicationResp"
                }
              }
            }
          }
        }
      }
    },
    "/v1/interviews": {
      "post": {
        "tags": ["Interviews"],
        "summary": "Schedule an interview",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/interviewScheduleReq"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Interview scheduled successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/interviewResp"
                }
              }
            }
          }
        }
      }
    },
    "/v1/students/interviews": {
      "get": {
        "tags": ["Interviews"],
        "summary": "Get student's interviews",
        "responses": {
          "200": {
            "description": "List of interviews",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "interviews": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/interviewResp"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/v1/companies/interviews": {
      "get": {
        "tags": ["Interviews"],
        "summary": "Get company's interviews",
        "responses": {
          "200": {
            "description": "List of interviews",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "interviews": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/interviewResp"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/v1/notifications": {
      "get": {
        "tags": ["Notifications"],
        "summary": "Get notifications",
        "responses": {
          "200": {
            "description": "List of notifications",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "notifications": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/notificationResp"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/v1/notifications/{notificationId}": {
      "patch": {
        "tags": ["Notifications"],
        "summary": "Mark notification as read",
        "parameters": [
          {
            "name": "notificationId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Notification marked as read",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/notificationResp"
                }
              }
            }
          }
        }
      }
    },
    "/v1/analytics/placements": {
      "get": {
        "tags": ["Analytics"],
        "summary": "Get placement statistics",
        "responses": {
          "200": {
            "description": "Placement statistics",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/placementStatsResp"
                }
              }
            }
          }
        }
      }
    },
    "/v1/analytics/students/performance": {
      "get": {
        "tags": ["Analytics"],
        "summary": "Get student performance analytics",
        "responses": {
          "200": {
            "description": "Student performance analytics",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/studentPerformanceResp"
                }
              }
            }
          }
        }
      }
    },
    "/v1/analytics/companies/trends": {
      "get": {
        "tags": ["Analytics"],
        "summary": "Get company recruitment trends",
        "responses": {
          "200": {
            "description": "Company recruitment trends",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/companyTrendsResp"
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "securitySchemes": {
      "bearerAuth": {
        "type": "http",
        "scheme": "bearer",
        "bearerFormat": "JWT"
      }
    },
    "schemas": {
      "dateTime": {
        "type": "object",
        "properties": {
          "value": {
            "type": "string",
            "format": "time",
            "example": "2025-01-16T07:01:39Z"
          },
          "timezone": {
            "type": "string",
            "example": "IST"
          }
        }
      },
      "documentResp": {
        "type": "object",
        "properties": {
          "docId": {
            "type": "string",
            "example": "6913238f-d5e2-4ee6-b9f7-3e416f529fdb"
          },
          "userId": {
            "type": "string",
            "example": "7936f903-e5ed-4c65-a4f2-097b5007c21a"
          },
          "docName": {
            "type": "string",
            "example": "191325_resume"
          },
          "docType": {
            "type": "string",
            "example": "pdf"
          },
          "document": {
            "type": "string",
            "format": "byte"
          },
          "createdAt": {
            "type": "obejct",
            "$ref": "#/components/schemas/dateTime"
          },
          "updatedAt": {
            "type": "obejct",
            "$ref": "#/components/schemas/dateTime"
          }
        }
      },
      "documentReq": {
        "type": "object",
        "properties": {
          "userId": {
            "type": "string",
            "format": "uuid"
          },
          "docName": {
            "type": "string",
            "maxLength": 255
          },
          "docType": {
            "type": "string",
            "enum": ["pdf", "doc", "docx", "txt"]
          },
          "document": {
            "type": "string",
            "format": "base64",
            "maxLength": 10485760
          }
        },
        "required": ["userId", "docName", "docType", "document"]
      },
      "409Error": {
        "type": "object",
        "properties": {
          "code": {
            "type": "string",
            "example": "Conflict"
          },
          "reason": {
            "type": "string",
            "example": "entity already exists"
          },
          "dateTime": {
            "type": "object",
            "$ref": "#/components/schemas/dateTime"
          }
        }
      },
      "400Error": {
        "type": "object",
        "properties": {
          "code": {
            "type": "string",
            "example": "Bad Request"
          },
          "reason": {
            "type": "string",
            "example": "provided information is incorrect"
          },
          "dateTime": {
            "type": "object",
            "$ref": "#/components/schemas/dateTime"
          }
        }
      },
      "404Error": {
        "type": "object",
        "properties": {
          "code": {
            "type": "string",
            "example": "Not Found"
          },
          "reason": {
            "type": "string",
            "example": "the resource with id doesn't exists"
          },
          "dateTime": {
            "type": "object",
            "$ref": "#/components/schemas/dateTime"
          }
        }
      },
      "500Error": {
        "type": "object",
        "properties": {
          "code": {
            "type": "string",
            "example": "Internal Server Error"
          },
          "reason": {
            "type": "string",
            "example": "couldn't process request due to server error"
          },
          "dateTime": {
            "type": "object",
            "$ref": "#/components/schemas/dateTime"
          }
        }
      },
      "usersReq": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "example": "sumit kumar"
          },
          "email": {
            "type": "string",
            "example": "191325@juitsolan.in"
          },
          "password": {
            "description": "a strong alpha-numeric password, not less than 8 characters",
            "type": "string",
            "example": "sumit@kumar"
          },
          "enrollmentNumber": {
            "description": "your organization specific enrollment number",
            "type": "string",
            "example": 191325
          }
        },
        "required": [
          "name",
          "email",
          "password",
          "enrollmentNumber"
        ]
      },
      "userLoginReq": {
        "type": "object",
        "properties": {
          "enrollmentNumber": {
            "type": "string",
            "example": 191325
          },
          "password": {
            "type": "string",
            "example": "yourStrongPassword"
          }
        },
        "required": [
          "email",
          "enrollmentNumber",
          "password"
        ]
      },
      "userResp": {
        "type": "object",
        "properties": {
          "userId": {
            "type": "string",
            "example": 191325
          },
          "name": {
            "type": "string",
            "example": "Sumit Kumar"
          },
          "email": {
            "type": "string",
            "example": "191325@juitsolan.com"
          },
          "role": {
            "type": "string",
            "example": "student"
          },
          "createdAt": {
            "type": "object",
            "$ref": "#/components/schemas/dateTime"
          },
          "updatedAt": {
            "type": "object",
            "$ref": "#/components/schemas/dateTime"
          }
        }
      },
      "studentReq": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "example": "sumit kumar"
          },
          "degree": {
            "type": "string",
            "example": "BTech"
          },
          "department": {
            "type": "string",
            "example": "CSE"
          },
          "major": {
            "type": "string",
            "example": "Data-Science"
          },
          "graduationYear": {
            "type": "integer",
            "example": 2023
          },
          "contactInfo": {
            "type": "string",
            "example": 9898989898
          },
          "educationalBackground": {
            "type": "string",
            "example": "10th: SEM CBSE SCHOOL, 10.0CGPA\n12th: SEM CBSE SCHOOL, 68%"
          },
          "skills": {
            "type": "string",
            "example": "Golang, C++, C, Problem-solving, Kubernetes, Docker, HTTP, Go-Microservices"
          },
          "docId": {
            "type": "string",
            "example": "16a40f10-549e-4904-b95b-d229ed296d8b"
          }
        },
        "required": [
          "name",
          "degree",
          "department",
          "major",
          "graduationYear",
          "contactInfo"
        ]
      },
      "studentResp": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "example": "16a40f10-549e-4904-b95b-d229ed296d8b"
          },
          "userId": {
            "type": "string",
            "example": "d22ef340-e9ff-4f69-a9fb-c47479a2ad30"
          },
          "name": {
            "type": "string",
            "example": "sumit kumar"
          },
          "degree": {
            "type": "string",
            "example": "BTech"
          },
          "department": {
            "type": "string",
            "example": "CSE"
          },
          "major": {
            "type": "string",
            "example": "Data-Science"
          },
          "graduationYear": {
            "type": "integer",
            "example": 2023
          },
          "contactInfo": {
            "type": "string",
            "example": 9898989898
          },
          "educationalBackground": {
            "type": "string",
            "example": "10th: SEM CBSE SCHOOL, 10.0CGPA\n12th: SEM CBSE SCHOOL, 68%"
          },
          "skills": {
            "type": "string",
            "example": "Golang, C++, C, Problem-solving, Kubernetes, Docker, HTTP, Go-Microservices"
          },
          "docId": {
            "type": "string",
            "example": "16a40f10-549e-4904-b95b-d229ed296d8b"
          },
          "createdAt": {
            "$ref": "#/components/schemas/dateTime"
          },
          "updatedAt": {
            "$ref": "#/components/schemas/dateTime"
          }
        }
      },
      "jobResp": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "title": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "requirements": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "location": {
            "type": "string"
          },
          "salaryRange": {
            "type": "object",
            "properties": {
              "min": {
                "type": "number"
              },
              "max": {
                "type": "number"
              }
            }
          },
          "deadline": {
            "type": "string",
            "format": "date"
          },
          "companyId": {
            "type": "string"
          },
          "createdAt": {
            "$ref": "#/components/schemas/dateTime"
          },
          "updatedAt": {
            "$ref": "#/components/schemas/dateTime"
          }
        }
      },
      "jobApplicationReq": {
        "type": "object",
        "properties": {
          "resumeUrl": {
            "type": "string"
          },
          "coverLetter": {
            "type": "string"
          }
        },
        "required": ["resumeUrl"]
      },
      "jobApplicationResp": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "jobId": {
            "type": "string"
          },
          "studentId": {
            "type": "string"
          },
          "status": {
            "type": "string",
            "enum": ["PENDING", "ACCEPTED", "REJECTED", "INTERVIEW_SCHEDULED", "OFFERED"]
          },
          "createdAt": {
            "$ref": "#/components/schemas/dateTime"
          },
          "updatedAt": {
            "$ref": "#/components/schemas/dateTime"
          }
        }
      },
      "companyProfileReq": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "website": {
            "type": "string"
          },
          "industry": {
            "type": "string"
          },
          "size": {
            "type": "string"
          },
          "location": {
            "type": "string"
          }
        },
        "required": ["name", "description", "industry", "location"]
      },
      "companyProfileResp": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "website": {
            "type": "string"
          },
          "industry": {
            "type": "string"
          },
          "size": {
            "type": "string"
          },
          "location": {
            "type": "string"
          },
          "createdAt": {
            "$ref": "#/components/schemas/dateTime"
          },
          "updatedAt": {
            "$ref": "#/components/schemas/dateTime"
          }
        }
      },
      "jobPostingReq": {
        "type": "object",
        "properties": {
          "title": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "requirements": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "location": {
            "type": "string"
          },
          "salaryRange": {
            "type": "object",
            "properties": {
              "min": {
                "type": "number"
              },
              "max": {
                "type": "number"
              }
            }
          },
          "deadline": {
            "type": "string",
            "format": "date"
          }
        },
        "required": ["title", "description", "requirements", "location", "deadline"]
      },
      "jobPostingResp": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "title": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "requirements": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "location": {
            "type": "string"
          },
          "salaryRange": {
            "type": "object",
            "properties": {
              "min": {
                "type": "number"
              },
              "max": {
                "type": "number"
              }
            }
          },
          "deadline": {
            "type": "string",
            "format": "date"
          },
          "companyId": {
            "type": "string"
          },
          "createdAt": {
            "$ref": "#/components/schemas/dateTime"
          },
          "updatedAt": {
            "$ref": "#/components/schemas/dateTime"
          }
        }
      },
      "applicationResp": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "jobId": {
            "type": "string"
          },
          "studentId": {
            "type": "string"
          },
          "status": {
            "type": "string",
            "enum": ["PENDING", "ACCEPTED", "REJECTED", "INTERVIEW_SCHEDULED", "OFFERED"]
          },
          "createdAt": {
            "$ref": "#/components/schemas/dateTime"
          },
          "updatedAt": {
            "$ref": "#/components/schemas/dateTime"
          }
        }
      },
      "applicationStatusUpdateReq": {
        "type": "object",
        "properties": {
          "status": {
            "type": "string",
            "enum": ["PENDING", "ACCEPTED", "REJECTED", "INTERVIEW_SCHEDULED", "OFFERED"]
          }
        },
        "required": ["status"]
      },
      "interviewScheduleReq": {
        "type": "object",
        "properties": {
          "applicationId": {
            "type": "string"
          },
          "dateTime": {
            "type": "string",
            "format": "date-time"
          },
          "type": {
            "type": "string",
            "enum": ["ONLINE", "OFFLINE"]
          },
          "location": {
            "type": "string"
          },
          "notes": {
            "type": "string"
          }
        },
        "required": ["applicationId", "dateTime", "type"]
      },
      "interviewResp": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "applicationId": {
            "type": "string"
          },
          "dateTime": {
            "type": "string",
            "format": "date-time"
          },
          "type": {
            "type": "string",
            "enum": ["ONLINE", "OFFLINE"]
          },
          "location": {
            "type": "string"
          },
          "notes": {
            "type": "string"
          },
          "status": {
            "type": "string",
            "enum": ["SCHEDULED", "COMPLETED", "CANCELLED"]
          },
          "createdAt": {
            "$ref": "#/components/schemas/dateTime"
          },
          "updatedAt": {
            "$ref": "#/components/schemas/dateTime"
          }
        }
      },
      "notificationResp": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "userId": {
            "type": "string"
          },
          "title": {
            "type": "string"
          },
          "message": {
            "type": "string"
          },
          "type": {
            "type": "string",
            "enum": ["JOB", "INTERVIEW", "APPLICATION", "SYSTEM"]
          },
          "isRead": {
            "type": "boolean"
          },
          "createdAt": {
            "$ref": "#/components/schemas/dateTime"
          }
        }
      },
      "placementStatsResp": {
        "type": "object",
        "properties": {
          "totalStudents": {
            "type": "integer"
          },
          "placedStudents": {
            "type": "integer"
          },
          "placementPercentage": {
            "type": "number"
          },
          "topCompanies": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "companyId": {
                  "type": "string"
                },
                "name": {
                  "type": "string"
                },
                "count": {
                  "type": "integer"
                }
              }
            }
          },
          "departmentWiseStats": {
            "type": "object",
            "additionalProperties": {
              "type": "object",
              "properties": {
                "total": {
                  "type": "integer"
                },
                "placed": {
                  "type": "integer"
                },
                "percentage": {
                  "type": "number"
                }
              }
            }
          }
        }
      },
      "studentPerformanceResp": {
        "type": "object",
        "properties": {
          "totalApplications": {
            "type": "integer"
          },
          "interviewsAttended": {
            "type": "integer"
          },
          "offersReceived": {
            "type": "integer"
          },
          "successRate": {
            "type": "number"
          },
          "skillDistribution": {
            "type": "object",
            "additionalProperties": {
              "type": "integer"
            }
          }
        }
      },
      "companyTrendsResp": {
        "type": "object",
        "properties": {
          "totalJobsPosted": {
            "type": "integer"
          },
          "applicationsReceived": {
            "type": "integer"
          },
          "hiringRate": {
            "type": "number"
          },
          "departmentPreferences": {
            "type": "object",
            "additionalProperties": {
              "type": "integer"
            }
          },
          "skillDemand": {
            "type": "object",
            "additionalProperties": {
              "type": "integer"
            }
          }
        }
      }
    }
  },
  "security": [
    {
      "bearerAuth": []
    }
  ]
}